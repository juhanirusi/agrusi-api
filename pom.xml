<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.agrusi</groupId>
	<artifactId>backend-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backend-api</name>
	<description>The backend REST API for Agrusi.</description>

	<properties>

		<java.version>21</java.version>

		<postgresql.version>42.7.3</postgresql.version>
		<passay.version>1.6.4</passay.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<spring-boot-maven.version>3.2.3</spring-boot-maven.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<hibernate.version>6.5.2.Final</hibernate.version>
		<jts.version>1.19.0</jts.version>

		<!-- GeoTools -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<geotools.version>31.1</geotools.version>
		<maven.deploy.skip>true</maven.deploy.skip>

	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-jdbc</artifactId>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>

		<!-- TESTING START -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- TESTING END -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.orm/hibernate-spatial -->

		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-spatial</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.locationtech.jts/jts-core -->

		<dependency>
			<groupId>org.locationtech.jts</groupId>
			<artifactId>jts-core</artifactId>
			<version>${jts.version}</version>
		</dependency>

		<!--
		GeoTools DOESN'T COME FROM MAVEN, WE HAVE THE URL WHERE
		WE DOWNLOAD IT FROM IN THE REPOSITORY SECTION !!!
		-->

		<dependency>
		  <groupId>org.geotools</groupId>
		  <artifactId>gt-swing</artifactId>
		  <version>${geotools.version}</version>
		</dependency>

		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>

		<!--
		"Passay" custom password validation allows us to
		create our custom password validation

		https://mvnrepository.com/artifact/org.passay/passay
		-->

		<dependency>
			<groupId>org.passay</groupId>
			<artifactId>passay</artifactId>
			<version>${passay.version}</version>
		</dependency>

		<!--
		"MapStruct" Mapper to help us map between objects...

		https://mvnrepository.com/artifact/org.mapstruct/mapstruct
		-->

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.mapstruct/mapstruct-processor -->

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

	</dependencies>

	<repositories>

		<repository>
			<id>osgeo</id>
			<name>OSGeo Release Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
			<snapshots><enabled>false</enabled></snapshots>
			<releases><enabled>true</enabled></releases>
		</repository>

		<repository>
			<id>osgeo-snapshot</id>
			<name>OSGeo Snapshot Repository</name>
			<url>https://repo.osgeo.org/repository/snapshot/</url>
			<snapshots><enabled>true</enabled></snapshots>
			<releases><enabled>false</enabled></releases>
		</repository>

	</repositories>

	<build>

		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot-maven.version}</version>
			</plugin>

			<!--
			This is the MapStruct mapper that helps us with
			mapping between objects...
			-->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>

					<source>${java.version}</source>
					<target>${java.version}</target>
					<parameters>true</parameters>

					<annotationProcessorPaths>

						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>

					</annotationProcessorPaths>

				</configuration>
			</plugin>

		</plugins>

	</build>

</project>
